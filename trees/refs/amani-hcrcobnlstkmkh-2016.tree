\title{Cogent: Verifying High-assurance File System Implementations}
\taxon{reference}
\meta{venue}{[[asplos16]]}
\author/literal{Sidney Amani}
\author/literal{Alex Hixon}
\author{zilinc}
\author{crizkallah}
\author/literal{Peter Chubb}
\author{liamoc}
\author/literal{Joel Beeren}
\author{yutakang}
\author/literal{Japheth Lim}
\author{tsewell}
\author/literal{Joseph Tuong}
\author{gckeller}
\author{tobym}
\author{gklein}
\author{heiser}
\date{2016-03-25}
\meta{doi}{10.1145/2980024.2872404}
\tag{cogent}
\tag{refereed}
\p{
We present an approach to writing and formally verifying high-assurance file-system code in a restricted language called Cogent, supported by a certifying compiler that produces C code, high-level specification of Cogent, and translation correctness proofs. The language is strongly typed and guarantees absence of a number of common file system implementation errors. We show how verification effort is drastically reduced for proving higher-level properties of the file system implementation by reasoning about the generated formal specification rather than its low-level C code. We use the framework to write two Linux file systems, and compare their performance with their native C implementations.
}
\meta{source}{[Available from TS](https://trustworthy.systems/publications/nictaabstracts/Amani_HCRCOBNLSTKMKH_16.abstract)}
